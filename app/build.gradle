apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mirhoseini.marvel"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion

        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true

        dataBinding {
            enabled = true
        }

        /* replaced with custom MockTestRunner */
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.mirhoseini.marvel.MarvelTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled true
        }
    }

    flavorDimensions "mode"

    productFlavors {
        prod {
            dimension "mode"
        }

        mock {
            dimension "mode"
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    /* allow using java 8 lambda */
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

// Grant animation permissions to avoid test failure because of ui sync.
task grantAnimationPermissions(type: Exec, dependsOn: 'installMock') {
    group = 'test'
    description = 'Grant permissions for testing.'

    def absolutePath = file('..') // Get project absolute path
    commandLine "$absolutePath/set_animation_permissions.sh com.mirhoseini.marvel".split(" ")
}

// Source: http://stackoverflow.com/q/29908110/112705
afterEvaluate {
    tasks.each { task ->
        if (task.name.startsWith('assembleMockAndroidTest')) {
            task.dependsOn grantAnimationPermissions
        }
    }
}

jacocoAndroidUnitTestReport {
    // fix jacoco issue with ButterKnife
    excludes += ['**/*$ViewBinder*.*']
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':marvel-core')

    testCompile "junit:junit:$junitVersion"
    testCompile "org.robolectric:robolectric:$robolectricVersion"

    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexmakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$dexmakerVersion"
    androidTestCompile "com.android.support.test:runner:$supportTestVesion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"

    compile "com.android.support:appcompat-v7:$androidSupportVersion"
    compile "com.android.support:support-v4:$androidSupportVersion"
    compile "com.android.support:support-annotations:$androidSupportVersion"
    compile "com.android.support:design:$androidSupportVersion"
    compile "com.android.support:support-vector-drawable:$androidSupportVersion"
    compile "com.android.support:recyclerview-v7:$androidSupportVersion"
    compile "com.android.support:cardview-v7:$androidSupportVersion"
    compile "com.android.support:palette-v7:$androidSupportVersion"

    compile "io.reactivex:rxandroid:$rxandroidVersion"
    compile "com.jakewharton.rxbinding:rxbinding:$rxbindingVersion"

    compile "com.mirhoseini.utils:utils:$utilsVersion"

    compile "com.squareup.picasso:picasso:$picassoVersion"

    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "com.jakewharton.timber:timber:$timberVersion"

    compile "com.j256.ormlite:ormlite-android:$ormLiteVersion"

    compile "com.google.firebase:firebase-core:$firebaseVersion"
    compile "com.google.firebase:firebase-crash:$firebaseVersion"
}

apply plugin: 'com.google.gms.google-services'